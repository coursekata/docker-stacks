---
name: Build, Test, and Publish an Image

on:
  workflow_call:
    inputs:
      target:
        description: The target to bake
        type: string
        required: false
      runs-on:
        description: The runner to use
        type: string
        required: false
        default: ubuntu-latest
      free-disk-space:
        description: Whether to free disk space before building
        type: boolean
        required: false
        default: false
      registry:
        description: The registry to push to
        type: string
        required: false
        default: ghcr.io/coursekata
      skip-cache-to:
        description: Whether to skip caching to the registry
        type: boolean
        required: false
        default: false

jobs:
  docker:
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Free Disk Space (Ubuntu)
        if: inputs.free-disk-space
        uses: jlumbroso/free-disk-space@main
        with:
          dotnet: ${{ inputs.free-disk-space }}
          haskell: ${{ inputs.free-disk-space }}
          large-packages: ${{ inputs.free-disk-space }}
          swap-storage: ${{ inputs.free-disk-space }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYY-MM-DD'}}
            type=sha

      - name: Build and push
        uses: docker/bake-action@v5
        with:
          files: docker-bake.hcl,${{ steps.meta.outputs.bake-file-labels }}
          targets: ${{ inputs.target }}
          push: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAGS: ${{ steps.meta.outputs.tags }}
          REGISTRY: ${{ inputs.registry }}
          SKIP_CACHE_TO: ${{ inputs.skip-cache-to }}
