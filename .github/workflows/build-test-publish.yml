---
name: Build, Test, and Publish an Image

on:
  workflow_call:
    inputs:
      image:
        description: "The name of the image to build"
        type: string
        required: true
      runs-on:
        description: "The platform to build on"
        type: string
        required: false
        default: "ubuntu-latest"
      labels:
        description: "Labels to add to the image"
        type: string
        required: false
        default: ""
      tags:
        description: "Tags to add to the image"
        type: string
        required: false
        default: ""
      platforms:
        description: "Platforms to build for"
        type: string
        required: false
        default: |
          linux/amd64
          linux/arm64/v8
      build-args:
        description: "Extra build arguments to pass to the image"
        type: string
        required: false
        default: ""
      push:
        description: "Whether to push the image to the registry"
        type: boolean
        required: false
        default: true
      free-space:
        description: "Whether to free up disk space before building"
        type: boolean
        required: false
        default: true

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    steps:
      # https://github.com/jlumbroso/free-disk-space
      - if: ${{ inputs.runs-on == 'ubuntu-latest' && inputs.free-space == true }}
        name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          dotnet: false
          haskell: false
          large-packages: false
          swap-storage: false

      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v3

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/login-action
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Image Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository_owner }}/${{ inputs.image }}
            ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=schedule,pattern={{date 'YYYY-MM-DD'}}
            type=sha
            ${{ inputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ inputs.image }}
            org.opencontainers.image.url=https://github.com/${{ github.repository_owner }}/docker-stacks/pkgs/container/${{ inputs.image }}
            ${{ inputs.labels }}

      # https://github.com/docker/build-push-action
      - name: Build for current platform and load into Docker
        uses: docker/build-push-action@v5
        with:
          load: true
          context: ${{ inputs.context || inputs.image }}
          build-args: ${{ inputs.build-args }}
          tags: ${{ github.repository_owner }}/${{ inputs.image }}:test

      - name: Test
        run: |
          docker run --rm --mount=type=bind,source="./tests/${{ inputs.image }}.sh",target=/tmp/test.sh \
          ${{ github.repository_owner }}/${{ inputs.image }}:test bash /tmp/test.sh

      # https://github.com/docker/build-push-action
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: ${{ inputs.push }}
          context: ${{ inputs.context || inputs.image }}
          build-args: ${{ inputs.build-args }}
          platforms: ${{ inputs.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
